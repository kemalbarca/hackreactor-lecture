soal :
Write an "assertEqual" function from scratch, from memory.

Please DO NOT simply PASTE in from before.

If you have to go back and look at your previously-implemented code once, fine, but come back here and write it from memory.

Then use your assertion function to thoroughly test the code.

Use categorical reasoning to consider all the useful cases.

Debug the code under test, if necessary.

contoh : 
-

jawaban :
function every(array, callbackFunction) {
  var doesEveryElementPass = true;
  array.forEach(function(element) {
    doesEveryElementPass = doesEveryElementPass && callbackFunction(element);	
  });
  return doesEveryElementPass;
}

// Bonus: Cooler functional style.
function every(array, callbackFunction) {
  return array.reduce(function(allPass, element) {
    return allPass && callbackFunction(element); 
  }, true);
}

function assertEqual(actual, expected, testName) {
  if ( actual === expected ) {
  	console.log('PASSED [' + testName + ']');
  } else {
  	console.log('FAILED [' + testName + '] expected "' + expected + '", but got "' + actual + '"');
  }
}

function isEven(num) {
  return num % 2 === 0;
}

assertEqual(every([2, 4, 6], isEven), true, 'is true when all values evaluate true');
assertEqual(every([2, 3, 6], isEven), false, 'is false when any value evaluates false');
